package com.Amazing.entity;
// Generated Oct 14, 2023, 12:05:32 AM by Hibernate Tools 4.3.6.Final

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;

import java.util.List;

import org.hibernate.annotations.GenericGenerator;

/**
 * Type generated by hbm2java
 */
@Entity
@Table(name = "TYPE", schema = "dbo", catalog = "AMAZING_TMDT")
public class Type implements java.io.Serializable {

	private String typeId;
	private Product product;
	private String typeName;
	private int typePrice;
	private int typeQuantity;
	private String typeImage;
	private List<InvoiceDetail> invoiceDetails;

	public Type() {
	}

	public Type(Product product, String typeName, int typePrice, int typeQuantity, String typeImage) {
		this.product = product;
		this.typeName = typeName;
		this.typePrice = typePrice;
		this.typeQuantity = typeQuantity;
		this.typeImage = typeImage;
	}

	public Type(Product product, String typeName, int typePrice, int typeQuantity, String typeImage,
			List<InvoiceDetail> invoiceDetails) {
		this.product = product;
		this.typeName = typeName;
		this.typePrice = typePrice;
		this.typeQuantity = typeQuantity;
		this.typeImage = typeImage;
		this.invoiceDetails = invoiceDetails;
	}

	@Id
	@Column(name = "TYPE_ID", unique = true, nullable = false, length = 36)
	public String getTypeId() {
		return this.typeId;
	}

	public void setTypeId(String typeId) {
		this.typeId = typeId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PRODUCT_ID", nullable = false)
	public Product getProduct() {
		return this.product;
	}

	public void setProduct(Product product) {
		this.product = product;
	}

	@Column(name = "TYPE_NAME", nullable = false, length = 128)
	public String getTypeName() {
		return this.typeName;
	}

	public void setTypeName(String typeName) {
		this.typeName = typeName;
	}

	@Column(name = "TYPE_PRICE", nullable = false)
	public int getTypePrice() {
		return this.typePrice;
	}

	public void setTypePrice(int typePrice) {
		this.typePrice = typePrice;
	}

	@Column(name = "TYPE_QUANTITY", nullable = false)
	public int getTypeQuantity() {
		return this.typeQuantity;
	}

	public void setTypeQuantity(int typeQuantity) {
		this.typeQuantity = typeQuantity;
	}

	@Column(name = "TYPE_IMAGE", nullable = false)
	public String getTypeImage() {
		return this.typeImage;
	}

	public void setTypeImage(String typeImage) {
		this.typeImage = typeImage;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "type")
	public List<InvoiceDetail> getInvoiceDetails() {
		return this.invoiceDetails;
	}

	public void setInvoiceDetails(List<InvoiceDetail> invoiceDetails) {
		this.invoiceDetails = invoiceDetails;
	}

}
